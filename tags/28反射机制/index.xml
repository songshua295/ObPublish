<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>28反射机制 on</title><link>https://ob.doingnothing.online/tags/28%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link><description>Recent content in 28反射机制 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://ob.doingnothing.online/tags/28%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>2801_反射机制</title><link>https://ob.doingnothing.online/2801_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.doingnothing.online/2801_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</guid><description>2801_反射机制 Created: August 8, 2022 9:23 PM Date: August 8, 2022 类别: 反射机制
包类：java.lang.reflect.*
作用：操作字节码文件
相关的重要类 java.lang.Class 代表整个字节码，整个类型 java.</description></item><item><title>2802_反射机制补充</title><link>https://ob.doingnothing.online/2802_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E8%A1%A5%E5%85%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.doingnothing.online/2802_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E8%A1%A5%E5%85%85/</guid><description>2802_反射机制补充 反射机制的作用 可以获取类文件（直接操作字节码文件） 可以破坏封装性（打破封装） 可以破坏泛型的约束（因为泛型只是在编译阶段出现异常，编译之后的字节码文件是不存在泛型的，所以可以通过直接操作字节码文件，来达到绕过泛型约束的作用） 更适合于做Java高级框架 采用反射机制 保存对象的所有成员变量值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package reflectTest; import java.</description></item></channel></rss>