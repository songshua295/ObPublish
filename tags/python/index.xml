<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on</title><link>https://ob.doingnothing.ml/tags/python/</link><description>Recent content in python on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://ob.doingnothing.ml/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>python.01 变量</title><link>https://ob.doingnothing.ml/python.01-%E5%8F%98%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.doingnothing.ml/python.01-%E5%8F%98%E9%87%8F/</guid><description>变量赋值 直接用变量名=变量值即可，不需要定义类型，弱类型语法。
1 2 3 4 5 name=&amp;#39;玛利亚&amp;#39; print(name) print(&amp;#39;标识&amp;#39;,id(name)) print(&amp;#39;类型&amp;#39;,type(name)) print(&amp;#39;值&amp;#39;,name) 任意对象一般都包括以上这几个方法，其中id()可以判断是否是一个对象。
其中id指的是字符串常量的内存地址id，也就是说如果有别的变量字符串也是这样，那么所指向的id也是一样的。有点类似于java中的字符常量池。
两个不同变量的字符串一样，那么指向的id值一样</description></item><item><title>python.02 数据类型</title><link>https://ob.doingnothing.ml/python.02-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.doingnothing.ml/python.02-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>#python 基本数据类型主要有以下四种 正数 浮点数 布尔 1真0假 值开头是大写 True，False 所有对象都有布尔值，可以使用bool()函数获取对象的布尔值 空对象的布尔值一般都是False ，比如空数组，空集合 4. 字符串：单引号、双引号、三引号（内容可以多行） 加减法：浮点数类型的精度问题 在进行浮点数的运算时，最好导入Decimal ，避免精度问题，尤其是末尾是3的一些数值的运算的时候，会因为计算机底层二进制的缘故，导致出错。</description></item><item><title>python.03 接收输入input函数</title><link>https://ob.doingnothing.ml/python.03-%E6%8E%A5%E6%94%B6%E8%BE%93%E5%85%A5input%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.doingnothing.ml/python.03-%E6%8E%A5%E6%94%B6%E8%BE%93%E5%85%A5input%E5%87%BD%E6%95%B0/</guid><description> #python input函数主要用于接受键盘输入。
需要注意的，接收的值是字符串类型 ，如果需要进行数值运算，需要对每个数字使用evel() 函数转换成数值 使用int()等强制转换也是可以的
eg
1 2 3 4 5 a=input(&amp;#34;请输入一个数&amp;#34;) b=input(&amp;#34;请输入一个数&amp;#34;) print(a+b) print(eval(a+b)) print(eval(a)+eval(b))</description></item></channel></rss>