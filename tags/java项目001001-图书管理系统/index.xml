<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>【java项目001】001 图书管理系统 on</title><link>https://ob.dongthing.online/tags/java%E9%A1%B9%E7%9B%AE001001-%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link><description>Recent content in 【java项目001】001 图书管理系统 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://ob.dongthing.online/tags/java%E9%A1%B9%E7%9B%AE001001-%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>【项目1】图书管理系统</title><link>https://ob.dongthing.online/%E9%A1%B9%E7%9B%AE1%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.dongthing.online/%E9%A1%B9%E7%9B%AE1%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid><description>【项目1】图书管理系统 1. 导包 导入图书管理的包到idea 选择src目录，设置为source root 设置编码为gbk，设置jdk为8或者以上 2. 初始化用户数据 具体步骤 将User实现Serializable，添加序列化号 添加util工具包，添加initdatautil，添加初始化数据的方法 写出initdata通用方法，以及在主函数main方法中，写入具体的持久化user对象的方法，将对象写入到本地硬盘中，具体代码如下 注意：存入本地的对象都需要添加序列号，常用的路径可以加入到常量类中，pathConstant中的user对象存放路径 主要代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 package com.</description></item><item><title>【项目2】多线程下载器步骤</title><link>https://ob.dongthing.online/%E9%A1%B9%E7%9B%AE2%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E5%99%A8%E6%AD%A5%E9%AA%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ob.dongthing.online/%E9%A1%B9%E7%9B%AE2%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E5%99%A8%E6%AD%A5%E9%AA%A4/</guid><description>【项目2】多线程下载器步骤 main方法中写对下载链接进行基本的变量准备，以及输入变量 在工具类util中创建HTTP工具类，其中写下两个静态方法 getHttpURLConnection(String url)：用于获取HttpURLConnection的对象 getHttpFileName(String url) core类 不想写了，主要是对于多线程的使用 通过多线程划分（比如8个线程），将要下载的文件分成8份，异步下载到本地之后，存放在以序号排列的temp临时文件（后缀名可以自定义），然后最后通过每个临时文件的序号按照顺序进行重新写入到一个文件中。 需要注意的是下载的这个每个片段的起始值是在上一个end值上加1</description></item></channel></rss>